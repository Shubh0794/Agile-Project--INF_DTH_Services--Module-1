CREATE TABLE USERS(
   ID int,
   userId VARCHAR (20)     NOT NULL,
   password  VARCHAR(20)   NOT NULL,
   type  int
);


CREATE SEQUENCE user_id_seq;


CREATE TRIGGER users_ai
BEFORE INSERT ON Users
FOR EACH ROW
BEGIN
  SELECT user_id_seq.nextval
  INTO :new.ID
  FROM dual;
END;

INSERT INTO Users VALUES(0,'sdesai1','password',0);


SELECT * FROM Users
----------------------------------------

INVENTORY 


CREATE TABLE INVENTORY(
   ID int,
   INVENTORYID int,
   BOX  VARCHAR(20)   NOT NULL,
   SERIALNUMBER int,
   MACID int,
   REMOTECONTROLASSETID int,
   DISHASSETID int,
   STATUS int,
   
   PRIMARY KEY(INVENTORYID)
);


CREATE SEQUENCE inventory_id_seq;


CREATE TRIGGER inventory_ai1
BEFORE INSERT ON INVENTORY
FOR EACH ROW
BEGIN
  SELECT inventory_id_seq.nextval
  INTO :new.ID
  FROM dual;
END;

INSERT INTO INVENTORY VALUES (0, 123,'asd',0,0,0,0,0);

SELECT * FROM INVENTORY

DROP TRIGGER SYSTEM.INVENTORY_AI; 

------------------------------------------
RETAILERS


CREATE TABLE RETAILERS(
   ID int,
   USERID VARCHAR(20) NOT NULL,
   NAME  VARCHAR(20)   NOT NULL,
   CONTACT1 NUMBER,
   CONTACT2 NUMBER,
   ADDRESS1 VARCHAR(20),
   ADDRESS2 VARCHAR(20),
   ZIPCODE int,
   CITY VARCHAR(20),
   STATE VARCHAR(20),
   MAXBOX int,
   CREDITLIMIT float,
   COMMISSIONPERCENT float,
   SERVICECHARGE float,
   INVENTORYID int,
   CREATIONDATE date,
   TOTALINVENTORYCOST float,
   
   PRIMARY KEY(USERID),
   CONSTRAINT fk_retailers_inventory FOREIGN KEY (INVENTORYID) REFERENCES INVENTORY (INVENTORYID)
);


CREATE SEQUENCE retailers_id_seq;


CREATE TRIGGER retailers_ai
BEFORE INSERT ON RETAILERS
FOR EACH ROW
BEGIN
  SELECT retailers_id_seq.nextval
  INTO :new.ID
  FROM dual;
END;

-----------------------------------
OPERATORS


CREATE TABLE OPERATORS(
   ID int,
   USERID VARCHAR(20) NOT NULL,
   FIRSTNAME  VARCHAR(20),
   LASTNAME VARCHAR(20),
   EMAIL VARCHAR(50),
   PHONE NUMBER,
   SHIFTSTARTDATE DATE,
   SHIFTENDDATE DATE,
   NOOFCUSTOMER INT,
   CREATIONDATE DATE,
   ACTIVEUSERS INT,
   
   
   PRIMARY KEY(USERID)
);



CREATE SEQUENCE operators_id_seq;


CREATE TRIGGER operators_ai
BEFORE INSERT ON OPERATORS
FOR EACH ROW
BEGIN
  SELECT operators_id_seq.nextval
  INTO :new.ID
  FROM dual;
END;

--------------------------------------------

CUSTOMER



CREATE TABLE CUSTOMERS(
  ID int,
   USERID VARCHAR(20) NOT NULL,
   FIRSTNAME  VARCHAR(20),
   LASTNAME VARCHAR(20),
   EMAIL VARCHAR(50),
   PHONE NUMBER,
   ADDRESS1 VARCHAR(20),
   ADDRESS2 VARCHAR(20),
   LANDMARK VARCHAR(20),
   ZIPCODE int,
   CREATIONDATE date,
   OPERATORID VARCHAR(20),
   RETAILERID VARCHAR(20),
   
   PRIMARY KEY(USERID),
   CONSTRAINT fk_customers_retailers FOREIGN KEY (RETAILERID) REFERENCES RETAILERS (USERID),
   CONSTRAINT fk_customers_operators FOREIGN KEY (OPERATORID) REFERENCES OPERATORS (USERID)
);



CREATE SEQUENCE customers_id_seq;


CREATE TRIGGER customers_ai
BEFORE INSERT ON CUSTOMERS
FOR EACH ROW
BEGIN
  SELECT customers_id_seq.nextval
  INTO :new.ID
  FROM dual;
END;



